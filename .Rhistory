options(warn = -1)
p <- ggplot(temp_logistic, aes(x = BMI, y=Hypothermic))+
geom_jitter(width = 0, height = 0.1, alpha = 0.3)+
ggforce::geom_mark_rect(aes(filter = bmi== "low", fill = low_bmi)) +
theme_minimal()
suppressMessages(print(p))
temp_logistic <- temp_logistic %>%
mutate(Hypothermic = as_factor(Hypothermic)) %>%
mutate(Propofol_used = as_factor(Propofol_used)) %>%
mutate(bmi = case_when(BMI<=25 ~ "low",
BMI>25 & BMI <=33 ~ "mid",
BMI>33 ~ "high"))
options(warn = -1)
p <- ggplot(temp_logistic, aes(x = BMI, y=Hypothermic))+
geom_jitter(width = 0, height = 0.1, alpha = 0.3)+
ggforce::geom_mark_rect(aes(filter = bmi== "high", fill = low_bmi)) +
theme_minimal()
suppressMessages(print(p))
temp_logistic <- temp_logistic %>%
mutate(Hypothermic = as_factor(Hypothermic)) %>%
mutate(Propofol_used = as_factor(Propofol_used)) %>%
mutate(bmi = case_when(BMI<=25 ~ "low",
BMI>25 & BMI <=33 ~ "mid",
BMI>33 ~ "high"))
options(warn = -1)
p <- ggplot(temp_logistic, aes(x = BMI, y=Hypothermic))+
geom_jitter(width = 0, height = 0.1, alpha = 0.3)+
ggforce::geom_mark_rect(aes(filter = bmi== "high" & Hypothermic == "hypothermic", fill = low_bmi)) +
theme_minimal()
suppressMessages(print(p))
temp_logistic <- temp_logistic %>%
mutate(Hypothermic = as_factor(Hypothermic)) %>%
mutate(Propofol_used = as_factor(Propofol_used)) %>%
mutate(bmi = case_when(BMI<=25 ~ "low",
BMI>33 ~ "high"))
options(warn = -1)
p <- ggplot(temp_logistic, aes(x = BMI, y=Hypothermic))+
geom_jitter(width = 0, height = 0.1, alpha = 0.3)+
ggforce::geom_mark_rect(aes(filter = bmi== "high" & Hypothermic == "hypothermic", fill = low_bmi)) +
ggforce::geom_mark_rect(aes(filter = bmi== "low" & Hypothermic == "hypothermic", fill = low_bmi)) +
theme_minimal()
suppressMessages(print(p))
options(htmltools.dir.version = FALSE)
library(tidyverse)
library(infer)
library(gt)
library(nur1027functions)
temp_logistic <- temp_logistic %>%
mutate(Hypothermic = as_factor(Hypothermic)) %>%
mutate(Propofol_used = as_factor(Propofol_used)) %>%
mutate(bmi = case_when(BMI<=25 ~ "low",
BMI>33 ~ "high"))
options(warn = -1)
p <- ggplot(temp_logistic, aes(x = BMI, y=Hypothermic))+
geom_jitter(width = 0, height = 0.1, alpha = 0.3)+
ggforce::geom_mark_rect(aes(filter = bmi== "high" & Hypothermic == "hypothermic", fill = low_bmi)) +
ggforce::geom_mark_rect(aes(filter = bmi== "low" & Hypothermic == "hypothermic", fill = low_bmi)) +
theme_minimal()
suppressMessages(print(p))
temp_logistic <- temp_logistic %>%
mutate(Hypothermic = as_factor(Hypothermic)) %>%
mutate(Propofol_used = as_factor(Propofol_used)) %>%
mutate(bmi = case_when(BMI<=25 ~ "low",
BMI>33 ~ "high"))
options(warn = -1)
p <- ggplot(temp_logistic, aes(x = BMI, y=Hypothermic))+
geom_jitter(width = 0, height = 0.1, alpha = 0.3)+
ggforce::geom_mark_rect(aes(filter = bmi== "high" & Hypothermic == "hypothermic", fill = bmi)) +
ggforce::geom_mark_rect(aes(filter = bmi== "low" & Hypothermic == "hypothermic", fill = bmi)) +
theme_minimal()
suppressMessages(print(p))
temp_logistic <- temp_logistic %>%
mutate(Hypothermic = as_factor(Hypothermic)) %>%
mutate(Propofol_used = as_factor(Propofol_used)) %>%
mutate(bmi = case_when(BMI<=25 ~ "low",
BMI>33 ~ "high"))
options(htmltools.dir.version = FALSE)
library(tidyverse)
library(infer)
library(gt)
library(nur1027functions)
temp_logistic <- temp_logistic %>%
mutate(Hypothermic = as_factor(Hypothermic)) %>%
mutate(Propofol_used = as_factor(Propofol_used)) %>%
mutate(bmi = case_when(BMI<=25 ~ "low",
BMI>33 ~ "high"))
options(warn = -1)
p <- ggplot(temp_logistic, aes(x = BMI, y=Hypothermic))+
geom_jitter(width = 0, height = 0.1, alpha = 0.3)+
ggforce::geom_mark_rect(aes(filter = bmi== "high" & Hypothermic == "hypothermic", fill = bmi), legend=NULL) +
ggforce::geom_mark_rect(aes(filter = bmi== "low" & Hypothermic == "hypothermic", fill = bmi)) +
theme_minimal()
suppressMessages(print(p))
p <- ggplot(temp_logistic, aes(x = BMI, y=Hypothermic))+
geom_jitter(width = 0, height = 0.1, alpha = 0.3)+
ggforce::geom_mark_rect(aes(filter = bmi== "high" & Hypothermic == "hypothermic", fill = bmi), legend=FALSE) +
ggforce::geom_mark_rect(aes(filter = bmi== "low" & Hypothermic == "hypothermic", fill = bmi)) +
theme_minimal()
suppressMessages(print(p))
p <- ggplot(temp_logistic, aes(x = BMI, y=Hypothermic))+
geom_jitter(width = 0, height = 0.1, alpha = 0.3)+
ggforce::geom_mark_rect(aes(filter = bmi== "high" & Hypothermic == "hypothermic", fill = bmi), show.legend=FALSE) +
ggforce::geom_mark_rect(aes(filter = bmi== "low" & Hypothermic == "hypothermic", fill = bmi)) +
theme_minimal()
suppressMessages(print(p))
p <- ggplot(temp_logistic, aes(x = BMI, y=Hypothermic))+
geom_jitter(width = 0, height = 0.1, alpha = 0.3)+
ggforce::geom_mark_rect(aes(filter = bmi== "high" & Hypothermic == "hypothermic", fill = bmi), show.legend=FALSE) +
ggforce::geom_mark_rect(aes(filter = bmi== "low" & Hypothermic == "hypothermic", fill = bmi), show.legend = FALSE) +
theme_minimal()
suppressMessages(print(p))
options(htmltools.dir.version = FALSE)
library(tidyverse)
library(infer)
library(gt)
library(nur1027functions)
model <- temp_logistic %>%
glm(formula = Hypothermic ~ BMI + Propofol_used,family = "binomial")
tidy <- broom::tidy(model)
tidy <- tidy %>%
mutate(oddsratio= exp(estimate))
confint <- suppressMessages(confint(model)) %>%
exp
tidy <- cbind(tidy, confint)
tidy %>%
mutate_if(is.numeric, ~round(., 1)) %>%
gt() %>%
cols_label(
estimate = html("&beta;"), oddsratio= "OR"
)
tidy
tidy$term
tidy$term[3]
options(htmltools.dir.version = FALSE)
library(tidyverse)
library(infer)
library(gt)
library(nur1027functions)
model <- temp_logistic %>%
glm(formula = Hypothermic ~ BMI + Propofol_used,family = "binomial")
tidy <- broom::tidy(model)
tidy <- tidy %>%
mutate(oddsratio= exp(estimate))
confint <- suppressMessages(confint(model)) %>%
exp
tidy <- cbind(tidy, confint)
tidy$term[3] <- "Propofol = "
tidy %>%
mutate_if(is.numeric, ~round(., 1)) %>%
gt() %>%
cols_label(
estimate = html("&beta;"), oddsratio= "OR"
)
model <- temp_logistic %>%
glm(formula = Hypothermic ~ BMI + Propofol_used,family = "binomial")
tidy <- broom::tidy(model)
tidy <- tidy %>%
mutate(oddsratio= exp(estimate))
confint <- suppressMessages(confint(model)) %>%
exp
tidy <- cbind(tidy, confint)
tidy %>%
mutate_if(is.numeric, ~round(., 1)) %>%
gt() %>%
cols_label(
estimate = html("&beta;"), oddsratio= "OR"
)
options(htmltools.dir.version = FALSE)
library(tidyverse)
library(infer)
library(gt)
library(nur1027functions)
tidy$term["Propofol_used"]
model <- temp_logistic %>%
glm(formula = Hypothermic ~ BMI + Propofol_used,family = "binomial")
tidy <- broom::tidy(model)
tidy <- tidy %>%
mutate(oddsratio= exp(estimate))
confint <- suppressMessages(confint(model)) %>%
exp
tidy <- cbind(tidy, confint)
tidy$term["Propofol_used"]
model <- temp_logistic %>%
glm(formula = Hypothermic ~ BMI + Propofol_used,family = "binomial")
tidy <- broom::tidy(model)
tidy <- tidy %>%
mutate(oddsratio= exp(estimate))
confint <- suppressMessages(confint(model)) %>%
exp
tidy <- cbind(tidy, confint)
tidy$term[3] <- "Propofol"
tidy %>%
mutate_if(is.numeric, ~round(., 1)) %>%
gt() %>%
cols_label(
estimate = html("&beta;"), oddsratio= "OR"
) %>%
data_color(
columns = OR,
colors = "red")
model <- temp_logistic %>%
glm(formula = Hypothermic ~ BMI + Propofol_used,family = "binomial")
tidy <- broom::tidy(model)
tidy <- tidy %>%
mutate(oddsratio= exp(estimate))
confint <- suppressMessages(confint(model)) %>%
exp
tidy <- cbind(tidy, confint)
tidy$term[3] <- "Propofol"
tidy %>%
mutate_if(is.numeric, ~round(., 1)) %>%
gt() %>%
cols_label(
estimate = html("&beta;"), oddsratio= "OR"
) %>%
data_color(
columns = OR,
colors = "red")
model <- temp_logistic %>%
glm(formula = Hypothermic ~ BMI + Propofol_used,family = "binomial")
tidy <- broom::tidy(model)
tidy <- tidy %>%
mutate(oddsratio= exp(estimate))
confint <- suppressMessages(confint(model)) %>%
exp
tidy <- cbind(tidy, confint)
tidy$term[3] <- "Propofol"
tidy %>%
mutate_if(is.numeric, ~round(., 1)) %>%
gt() %>%
cols_label(
estimate = html("&beta;"), oddsratio= "OR"
) %>%
data_color(
columns = oddsratio,
colors = "red")
model <- temp_logistic %>%
glm(formula = Hypothermic ~ BMI + Propofol_used,family = "binomial")
tidy <- broom::tidy(model)
tidy <- tidy %>%
mutate(oddsratio= exp(estimate))
confint <- suppressMessages(confint(model)) %>%
exp
tidy <- cbind(tidy, confint)
tidy$term[3] <- "Propofol"
tidy %>%
mutate_if(is.numeric, ~round(., 1)) %>%
gt() %>%
cols_label(
estimate = html("&beta;"), oddsratio= "OR"
) %>%
data_color(
columns = oddsratio,
color = "red")
model <- temp_logistic %>%
glm(formula = Hypothermic ~ BMI + Propofol_used,family = "binomial")
tidy <- broom::tidy(model)
tidy <- tidy %>%
mutate(oddsratio= exp(estimate))
confint <- suppressMessages(confint(model)) %>%
exp
tidy <- cbind(tidy, confint)
tidy$term[3] <- "Propofol"
tidy %>%
mutate_if(is.numeric, ~round(., 1)) %>%
gt() %>%
cols_label(
estimate = html("&beta;"), oddsratio= "OR"
) %>%
data_color(
columns = OR,
color = "red")
model <- temp_logistic %>%
glm(formula = Hypothermic ~ BMI + Propofol_used,family = "binomial")
tidy <- broom::tidy(model)
tidy <- tidy %>%
mutate(oddsratio= exp(estimate))
confint <- suppressMessages(confint(model)) %>%
exp
tidy <- cbind(tidy, confint)
tidy$term[3] <- "Propofol"
tidy %>%
mutate_if(is.numeric, ~round(., 1)) %>%
gt()%>%
data_color(
columns = oddsratio,
colors = "red") %>%
cols_label(
estimate = html("&beta;"), oddsratio= "OR"
)
options(htmltools.dir.version = FALSE)
library(tidyverse)
library(infer)
library(gt)
library(nur1027functions)
model <- temp_logistic %>%
glm(formula = Hypothermic ~ BMI + Propofol_used,family = "binomial")
tidy <- broom::tidy(model)
tidy <- tidy %>%
mutate(oddsratio= exp(estimate))
confint <- suppressMessages(confint(model)) %>%
exp
tidy <- cbind(tidy, confint)
tidy$term[3] <- "Propofol"
tidy %>%
mutate_if(is.numeric, ~round(., 1)) %>%
gt()%>%
data_color(
columns = oddsratio,
colors = "red")
model <- temp_logistic %>%
glm(formula = Hypothermic ~ BMI + Propofol_used,family = "binomial")
tidy <- broom::tidy(model)
tidy <- tidy %>%
mutate(oddsratio= exp(estimate))
confint <- suppressMessages(confint(model)) %>%
exp
tidy <- cbind(tidy, confint)
tidy$term[3] <- "Propofol"
tidy %>%
mutate_if(is.numeric, ~round(., 1)) %>%
gt()%>%
data_color(
columns = vars(oddsratio),
colors = "red") %>%
cols_label(
estimate = html("&beta;"), oddsratio= "OR"
)
nur1027functions::plot_ci(dots = "red",
shade = "blue")
library(nur1027functions)
plot_ci(dots = "red",
shade = "blue")
options(htmltools.dir.version = FALSE)
library(tidyverse)
library(infer)
library(gt)
library(nur1027functions)
library(moderndive)
plot <- plot_qol(x=PHQ9, y=GH) +
labs(x = "Depression (PHQ-9)", y= "Quality of life (SF-36)")
plot
plot+
theme_minimal()+
scale_y_continuous(limits = c(0,100))+
scale_x_continuous(limits = c(0,25))+
geom_smooth(method = "lm", se = FALSE)+
annotate(
geom = "curve", xend = 0, yend = 67, x = 7.5, y = 3,
curvature = -.3, arrow = arrow(length = unit(4, "mm"))
) +
annotate(geom = "text", x = 8, y = 3, label = "Intercept (67)", hjust = "left",
size = 5)
plot+
theme_minimal()+
scale_y_continuous(limits = c(0,100))+
scale_x_continuous(limits = c(0,25), breaks = c(0,5,10,15,17.5, 20, 25))+
geom_smooth(method = "lm", se = FALSE)+    coord_cartesian(ylim=c(40, 50))
plot+
theme_minimal()+
scale_y_continuous(limits = c(0,100))+
scale_x_continuous(limits = c(0,25), breaks = c(0,5,10,15,17.5, 20, 25))+
geom_smooth(method = "lm", se = FALSE)+
coord_cartesian(ylim=c(40, 50))+
annotate(
geom = "segment", xend = 18.5, yend = 42.5, x = 17.5, y = 42.5, color = "red"
)
plot+
theme_minimal()+
scale_y_continuous(limits = c(0,100))+
scale_x_continuous(limits = c(0,25), breaks = c(0,5,10,15,17.5, 20, 25))+
geom_smooth(method = "lm", se = FALSE)+
annotate(
geom = "segment", xend = 18.5, yend = 42.5, x = 17.5, y = 42.5, color = "red"
) +
annotate(
geom = "segment", xend = 18.5, yend = 42.5-1.42, x = 18.5, y = 42.5, color = "red"
) +
coord_cartesian(ylim=c(40, 50))+
annotate(geom = "text", x = 19, y = 42.5-(1.42/2), label = "1.4 points lower", hjust = "left",
size = 4)
table <-  <-
table <- moderndive::get_regression_table(model)%>%
gt() %>%
cols_label(
estimate = html("&beta;")
)
model <- lm(GH ~ PHQ9, data = data)
table <-  moderndive::get_regression_table(model)%>%
gt() %>%
cols_label(
estimate = html("&beta;")
)
gtsave(table, here::here("video-content", "stats", "stats_regression_files"))
gtsave(table, here::here("video-content", "stats", "stats_regression_files", "regression_table.png"))
data
suppressMessages(library(tidyverse))
library(nur1027functions)
library(infer)
options(warn = -1)
# Calculate the difference in mean quality of life scores in the sample
sample_mean_diff <- data %>%
specify(GH ~ depressed) %>%
calculate(stat = "diff in means",
order = c("depressed", "not depressed"))
glue::glue("The mean difference in the sample was ",
round(sample_mean_diff$stat, 2))
# Create and visualise the null distribution
null_distribution <- data %>%
specify(GH ~ depressed) %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "diff in means",
order = c("depressed", "not depressed"))
null_distribution %>%
ggplot2::ggplot(aes(stat)) +
geom_dotplot(binwidth=0.75, method='histodot', colour = "white",
fill = "blue", alpha=0.3) +
scale_y_continuous(limits = c(0,1))+
scale_x_continuous(limits = c(-25,25))+
theme_minimal()+
labs(x = "Difference in mean between groups", y = NULL, title = "")+
geom_vline(xintercept = 0, size = 1, color = "black")+
coord_cartesian(clip="off") +
geom_text(x = -12, y = 0.9, label = "Lower score in depressed group",
check_overlap = TRUE, hjust = "center") +
geom_text(x = 12, y = 0.9, inherit.aes = FALSE,
label = "Higher score in depressed group",
check_overlap = TRUE, hjust = "center")+
geom_vline(xintercept = sample_mean_diff$stat, size = 1,
color = "red", linetype = "dashed" )+
annotate("rect", xmin = -sample_mean_diff$stat, xmax = Inf,
ymin = 0, ymax = Inf,
alpha = .2, fill = "red") +
annotate("rect", xmin = sample_mean_diff$stat, xmax = -Inf,
ymin = 0, ymax = Inf,
alpha = .2, fill = "red")
# Calculate the p-value
pvalue <- null_distribution %>%
get_p_value(obs_stat = sample_mean_diff, direction = "two_sided")
glue::glue("The p-value for the mean difference in our sample was ",
pvalue$p_value)
source('~/NUR1027-FALL-2019/exercises/solution_08_06.R', echo=TRUE)
source('~/NUR1027-FALL-2019/exercises/solution_08_06.R', echo=TRUE)
source('~/NUR1027-FALL-2019/exercises/solution_08_06.R', echo=TRUE)
devtools::install_github("awconway/nur1027functions")
library(nur1027functions)
plot_ci(dots = "red",
shade = "blue")
library(nur1027functions)
plot_ci(dots = "red",
shade = "blue")
plot_ci(dots = "red",
shade = "blue")
prop.test(0.18)
prop.test(0.18, 584)
prop.test(102, 584)
resuslts <- prop.test(102, 584)
resuslts$conf.int
resuslts$conf.int[1]
resuslts <- prop.test(102, 584)
glue::glue("Lower 95% confidence interval was ",
"resuslts$conf.int[1])
resuslts <- prop.test(102, 584)
glue::glue("Lower 95% confidence interval was ",
resuslts$conf.int[1])
resuslts$conf.int[1]
glue::glue("Lower 95% confidence interval was ",
round(resuslts$conf.int[1]*100,0),"%")
glue::glue("Upper 95% confidence interval was ",
round(resuslts$conf.int[2]*100,0),"%")
glue::glue("95% confidence intervals spanned from ",
round(resuslts$conf.int[1]*100,0),"%",
" to ", round(resuslts$conf.int[2]*100,0),"%")
glue::glue("95% confidence intervals spanned from ",
round(resuslts$conf.int[1]*100,0),"%",
" to ", round(resuslts$conf.int[2]*100,0),"%")
results <- prop.test(102, 584)
glue::glue("95% confidence intervals spanned from ",
round(results$conf.int[1]*100,0),"%",
" to ", round(results$conf.int[2]*100,0),"%")
results <- prop.test(64, 584)
glue::glue("95% confidence intervals spanned from ",
round(results$conf.int[1]*100,0),"%",
" to ", round(results$conf.int[2]*100,0),"%")
ci_proportion(23, 456)
library(nur1027functions)
ci_proportion(23, 456)
50*.57
library(nur1027functions)
ci_proportion(29, 50)
ci_proportion(40, 50)
ci_proportion(29, 50)
here::here()
here::here('video-content', 'fa.html')
here::here('video-content', 'fa.html')
library(here)
CONSORT
shiny::runApp('Users/aaronconway/shinyproxy-docker-compose-example/apps/test', host = '0.0.0.0', port = 3838)
pop=runif(1000,5000,40000)
popminordist=rbeta(1000,60,40)
popMinor=pop*popminordist
popMajor=pop-popMinor
WarmingCosts=rgamma(n=1000,6, 0.2)
plot(density(WarmingCosts), main="", xlab="Cost of active warming per patient ($AUD)")
IntCosts=pop/10630
PreIntWarming=rbeta(1000,84,(220-84))
plot(density(PreIntWarming), main="", xlab="Proportion of 'at-risk' patients receiving warming pre-bundle")
PostIntWarming=PreIntWarming*(rlnorm(1000,log(1.38),0.12))
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
